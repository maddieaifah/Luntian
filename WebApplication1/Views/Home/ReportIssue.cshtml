@model WebApplication1.Models.Report
@{
    ViewData["Title"] = "Report Issue";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>LUNTIAN | Report Issue</title>
    <link rel="stylesheet" href="~/css/citizens.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/report.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>
</head>
<body>
    <div class="report-section">
        <h2 class="section-title">Report Environmental Issue</h2>

        <form asp-controller="Report" asp-action="Submit" method="post" enctype="multipart/form-data" class="report-form">
            <div class="report-form-grid">
                <!-- Left -->
                <div class="left-column">
                    <label>Capture Image</label>
                    <video id="cameraStream" autoplay playsinline></video>
                    <img id="previewImage" style="display: none;" />

                    <div class="capture-container">
                        <button type="button" id="captureBtn" onclick="capturePhoto()" class="event-btn">Capture Photo</button>
                        <button type="button" id="retakeBtn" onclick="retakePhoto()" class="event-btn" style="display:none;">Retake Photo</button>
                    </div>

                    <canvas id="snapshot" style="display:none;"></canvas>
                </div>

                <!-- Right -->
                <div class="right-column">
                    <div class="form-group">
                        <label>Category</label>
                        <select name="Category" required>
                            <option disabled selected>Select Category</option>
                            <optgroup label="Environmental">
                                <option value="Garbage">Garbage</option>
                                <option value="Water Pollution">Water Pollution</option>
                                <option value="Air Pollution">Air Pollution</option>
                                <option value="Noise">Noise</option>
                            </optgroup>
                            <option value="Others">Others</option>
                        </select>
                    </div>

                    <div class="dropdown-row">
                        <div class="form-group">
                            <label>Priority Level</label>
                            <select name="PriorityLevel" required>
                                <option disabled selected>Select Priority</option>
                                <option value="Low">Low</option>
                                <option value="Moderate">Moderate</option>
                                <option value="High">High</option>
                                <option value="Urgent">Urgent</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Hazard Level</label>
                            <select name="HazardLevel" required>
                                <option disabled selected>Select Hazard</option>
                                <option value="Non-Hazardous">Non-Hazardous</option>
                                <option value="Mild">Mild</option>
                                <option value="Severe">Severe</option>
                                <option value="Life-Threatening">Life-Threatening</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Description</label>
                        <textarea name="Description" rows="4" required></textarea>
                    </div>

                    <div class="form-group">
                        <label>Location (Auto-filled)</label>
                        <input type="text" id="locationInput" name="LocationText" placeholder="Location description (optional)" />
                        <input type="hidden" id="lat" name="Latitude" />
                        <input type="hidden" id="lon" name="Longitude" />
                    </div>

                    <button type="submit" class="event-btn">Submit Report</button>
                </div>
            </div>
        </form>
    </div>

    <script>
        let streamRef = null;

        // Camera
        navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {
            streamRef = stream;
            document.getElementById('cameraStream').srcObject = stream;
        });

        function capturePhoto() {
            const video = document.getElementById('cameraStream');
            const canvas = document.getElementById('snapshot');
            const img = document.getElementById('previewImage');

            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;

            const ctx = canvas.getContext('2d');
            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

            img.src = canvas.toDataURL('image/png');
            img.style.display = 'block';
            video.style.display = 'none';

            document.getElementById('retakeBtn').style.display = 'inline-block';
            document.getElementById('captureBtn').style.display = 'none';
        }

        function retakePhoto() {
            document.getElementById('previewImage').style.display = 'none';
            document.getElementById('cameraStream').style.display = 'block';
            document.getElementById('retakeBtn').style.display = 'none';
            document.getElementById('captureBtn').style.display = 'inline-block';
        }

        // Geolocation
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(async (position) => {
                const lat = position.coords.latitude;
                const lon = position.coords.longitude;

                document.getElementById("lat").value = lat;
                document.getElementById("lon").value = lon;

                // Optional reverse geocode
                try {
                    const res = await fetch(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lon}`);
                    const data = await res.json();
                    document.getElementById("locationInput").value = data.display_name || `${lat}, ${lon}`;
                } catch (err) {
                    console.warn("Reverse geocoding failed:", err);
                }
            }, () => {
                console.warn("Geolocation denied or unavailable.");
            });
        }
    </script>
</body>
</html>
