@{
    ViewData["Title"] = "Report Issue";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>LUNTIAN | Report Issue</title>
    <link rel="stylesheet" href="~/css/citizens.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/report.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>
    <link href="https://fonts.googleapis.com/css2?family=Merriweather:wght@700&family=Source+Sans+Pro:wght@400;600&display=swap" rel="stylesheet"/>
</head>
<body>
    <!-- Navbar -->
    <div class="navbar">
        <div class="logo-section">
            <img src="~/images/logo only luntian.png" class="logo-img" />
            <span class="logo-text">LUNTIAN</span>
        </div>
        <div class="hamburger" onclick="toggleMenu()">
            <i class="fas fa-bars"></i>
        </div>
        <div class="nav-links" id="navLinks">
            <a asp-action="CitizenHome" asp-controller="Home"><i class="fas fa-home"></i> Home</a>
            <a asp-action="ReportIssue" asp-controller="Home" class="active"><i class="fas fa-exclamation-circle"></i> Report Issue</a>
    <a asp-action="Notification" asp-controller="Home" class="notif-icon">
        <i class="fas fa-bell"></i>
        <span class="badge">3</span> <!-- sample unread count -->
        </a>
            <div class="profile-container">
                <img src="~/images/profile.png" class="profile-icon" onclick="toggleDropdown()" />
                <div class="profile-dropdown" id="profileDropdown">
                    <a asp-action="Profile" asp-controller="Home"><i class="fas fa-user-circle"></i> Profile</a>
                    <a asp-action="RoleSelection" asp-controller="Home"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="report-section">
        <h2 class="section-title">Report Issue</h2>
        <form class="report-form" method="post" asp-controller="Report" asp-action="Submit" enctype="multipart/form-data">
  <div class="report-form-grid">
    <!-- Left Column -->
    <div class="left-column">
      <label>Report Issue Real-Time</label>
      <video id="cameraStream" autoplay playsinline></video>

      <img id="previewImage" style="display: none;" />

      <div class="capture-container">
        <button type="button" id="captureBtn" onclick="capturePhoto()" class="event-btn">Capture Photo</button>
        <button type="button" id="retakeBtn" onclick="retakePhoto()" class="event-btn" style="display: none; margin-left: 0.5rem;">Retake Photo</button>
      </div>

      <canvas id="snapshot" style="display:none;"></canvas>
    </div>

    <!-- Right Column -->
<!-- Right Column -->
<div class="right-column">
  <!-- New Dropdown Row -->
  <!-- Category Dropdown - full width -->
<!-- Category Dropdown (full row, updated styling) -->
<div class="form-group">
  <label for="category">Category</label>
  <select id="category" name="Category" required class="styled-select">
    <option disabled selected>Select Category</option>
    <optgroup label="Environmental">
      <option value="Garbage">Garbage</option>
      <option value="Water Pollution">Water Pollution</option>
      <option value="Air Pollution">Air Pollution</option>
      <option value="Noise">Noise</option>
    </optgroup>
    <optgroup label="Other">
      <option value="Others">Others</option>
    </optgroup>
  </select>
</div>

<!-- Priority & Hazardous Dropdowns (same row) -->
<div class="dropdown-row">
  <div class="form-group">
    <label for="priority">Priority Level</label>
  <select id="priority" name="PriorityLevel" class="styled-select colored-select" required onchange="updateSelectColor(this)">
    <option disabled selected>Select Priority</option>
    <option value="Low" data-color="#5cb85c">Low</option>
    <option value="Moderate" data-color="#f0ad4e">Moderate</option>
    <option value="High" data-color="#d9534f">High</option>
    <option value="Urgent" data-color="#a94442">Urgent</option>
  </select>
  </div>

  <div class="form-group">
    <label for="hazard">Hazardous Level</label>
    <select id="hazard" name="HazardLevel" class="styled-select colored-select" required onchange="updateSelectColor(this)">
      <option disabled selected>Select Hazard Level</option>
      <option value="Non-Hazardous" data-color="#5bc0de">Non-Hazardous</option>
      <option value="Mild" data-color="#f0ad4e">Mild</option>
      <option value="Severe" data-color="#d9534f">Severe</option>
      <option value="Life-Threatening" data-color="#a94442">Life-Threatening</option>
    </select>
  </div>
</div>


  <!-- Description -->
  <div class="form-group">
    <label for="issueDescription">Describe the Issue</label>
    <textarea id="issueDescription" name="Description" rows="4" placeholder="Provide details here..." required></textarea>
  </div>

  <div class="form-group">
    <label for="locationInput">Location</label>

    <!-- To contain latitude and longitude data -->
    <input type="hidden" id="lat" name="Latitude" />
    <input type="hidden" id="lon" name="Longitude" />

    <input type="text" id="locationInput" name="LocationText" placeholder="Enter location or leave blank" />
  </div>

  <button type="submit" class="event-btn">Submit Report</button>
</div>
  </div>
</form>
<!-- Submit Modal -->
<div id="submitModal" class="modal-overlay" style="display: none;">
  <div class="modal-content">
    <h3>Success</h3>
    <p>Your issue has been reported!</p>
    <button onclick="closeSubmitModal()" class="modal-btn">Close</button>
  </div>
</div>


    <!-- Scripts -->
    <script>
        function toggleMenu() {
    const navLinks = document.getElementById("navLinks");
    navLinks.classList.toggle("show");
  }

  function toggleDropdown() {
    document.getElementById("profileDropdown").classList.toggle("show");
  }

  // Close the dropdown when clicking outside of the profile icon
  window.addEventListener('click', function (event) {
    if (!event.target.matches('.profile-icon')) {
      const dropdown = document.getElementById("profileDropdown");
      if (dropdown && dropdown.classList.contains('show')) {
        dropdown.classList.remove('show');
      }
    }
  });

  let streamRef = null;

  // Start video stream
  navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {
    streamRef = stream;
    document.getElementById('cameraStream').srcObject = stream;
  });

function capturePhoto() {
  const video = document.getElementById('cameraStream');
  const canvas = document.getElementById('snapshot');
  const img = document.getElementById('previewImage');

  const width = video.clientWidth;
  const height = video.clientHeight;
  canvas.width = width;
  canvas.height = height;

  const ctx = canvas.getContext('2d');
  ctx.drawImage(video, 0, 0, width, height);

  img.src = canvas.toDataURL('image/png');
  img.style.display = 'block';

  // Smooth hide without breaking layout
  video.style.opacity = '0';
  video.style.pointerEvents = 'none';
  video.style.position = 'absolute';

  document.getElementById('retakeBtn').style.display = 'inline-block';
  document.getElementById('captureBtn').style.display = 'none';
}

function retakePhoto() {
  const video = document.getElementById('cameraStream');
  const img = document.getElementById('previewImage');

  img.style.display = 'none';
  video.style.opacity = '1';
  video.style.pointerEvents = 'auto';
  video.style.position = 'static';

  document.getElementById('retakeBtn').style.display = 'none';
  document.getElementById('captureBtn').style.display = 'inline-block';
}


  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(async (position) => {
      const { latitude, longitude } = position.coords;
      try {
        const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${latitude}&lon=${longitude}`);
        const data = await response.json();
        const locationInput = document.getElementById('locationInput');
        locationInput.value = data.display_name || `${latitude.toFixed(5)}, ${longitude.toFixed(5)}`;
        //For sending latitude and longitude from the hidden inputs
        document.getElementById('lat').value = latitude;
        document.getElementById('lon').value = longitude;

      } catch (error) {
        console.error("Error fetching address:", error);
      }
    }, () => {
      console.warn("Location access denied or unavailable.");
    });
  }

function updateSelectColor(select) {
  const value = select.value;

  // Reset color first
  select.style.color = '#fff';

  // Set background color based on value
  switch (value) {
    case 'Low':
    case 'Non-Hazardous':
      select.style.backgroundColor = '#5cb85c'; // green
      break;
    case 'Moderate':
    case 'Mild':
      select.style.backgroundColor = '#f0ad4e'; // yellow
      break;
    case 'High':
    case 'Severe':
      select.style.backgroundColor = '#d9534f'; // red
      break;
    case 'Urgent':
    case 'Life-Threatening':
      select.style.backgroundColor = '#a94442'; // dark red
      break;
    default:
      select.style.backgroundColor = '#fff'; // default
      select.style.color = '#235B2E';
  }
}

function handleSubmit(e) {
  e.preventDefault(); // prevent real submission for now
  document.getElementById('submitModal').style.display = 'flex';

  // Optional: reset form after success
  setTimeout(() => {
    const form = document.querySelector('.report-form');
    form.reset();

    // Reset camera
    document.getElementById('previewImage').style.display = 'none';
    const camera = document.getElementById('cameraStream');
    camera.style.opacity = '1';
    camera.style.pointerEvents = 'auto';
    camera.style.position = 'static';
    document.getElementById('retakeBtn').style.display = 'none';
    document.getElementById('captureBtn').style.display = 'inline-block';

    // Reset custom select styles (priority and hazard)
    const coloredSelects = document.querySelectorAll('.colored-select');
    coloredSelects.forEach(select => {
      select.style.backgroundColor = '#fff'; // or #f9f9f9 if you prefer
      select.style.color = '#235B2E';
    });

  }, 100);
}

function closeSubmitModal() {
  const modal = document.getElementById('submitModal');
  if (modal) {
    modal.style.display = 'none';
  }
}

window.addEventListener('click', function (e) {
  const modal = document.getElementById('submitModal');
  if (e.target === modal) {
    closeSubmitModal();
  }
});


</script>

</body>
</html>
